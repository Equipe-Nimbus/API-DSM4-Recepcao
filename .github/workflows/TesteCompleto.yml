# Teste
name: Teste Completo

on: 
  pull_request: 
    branches:
      - release


jobs:
    TesteUnitario:
        runs-on: ubuntu-latest

        container:
          image: pedrohsalmeida/nimbus-recepcao:Dev-latest
          options: --entrypoint /bin/sh # Usa '/bin/sh' para garantir que os comandos 'run' funcionem

        steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Instalando dempendencias
          run: npm install
          
        - name: rodando testes
          id: test
          run: npm run test

    PushDokerHub:
      runs-on: ubuntu-latest


      needs: AceitaRecusaPR

      steps:
        - name: Checkout code
          uses: actions/checkout@v3


        - name: Configurar Docker para autenticação
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}


        - name: Construir a imagem Docker
          run: |
            # Usando o número do pull request como parte da tag
            docker build -t pedrohsalmeida/nimbus-recepcao:Rel-0.${{ github.event.number }} .
            docker tag pedrohsalmeida/nimbus-recepcao:Rel-0.${{ github.event.number }} pedrohsalmeida/nimbus-recepcao:Rel-latest
    
    
        - name: Push da imagem para o Docker Hub
          run: |
            docker push pedrohsalmeida/nimbus-recepcao:Rel-0.${{ github.event.number }}
            docker push pedrohsalmeida/nimbus-recepcao:Rel-latest

    AceitaRecusaPR:
      runs-on: ubuntu-latest
      needs: TesteUnitario
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Aprovando pull_request se os testes passarem
          uses: juliangruber/approve-pull-request-action@v2 
          with:
              github-token: ${{ secrets.ADM_TOKEN }}
              number: ${{ github.event.pull_request.number }}

        - name: Merge Pull Request
          uses: juliangruber/merge-pull-request-action@v1
          with:
            github-token: ${{ secrets.ADM_TOKEN }}
            number: ${{ github.event.pull_request.number }}
            method: squash


        - run: echo "HEAD:${{github.event.pull_request.head.repo.name}}, BASE:${{github.event.pull_request.base.repo.name}}"

    
    AvisaResultado:
      runs-on: ubuntu-latest

      needs: 
        - AceitaRecusaPR
        - PushDokerHub
        - TesteUnitario
      if: always()

      steps:

        - run: echo AceitaRecusaPR ${{ needs.AceitaRecusaPR.result}} 
        - run: echo PushDokerHub ${{ needs.PushDokerHub.result}}
        - run: echo TesteIntegracao ${{ needs.PushDokerHub.result}}

        - name: Notificacao de sucesso
          if: ${{ needs.TesteUnitario.result == 'success' && needs.AceitaRecusaPR.result == 'success' && needs.PushDokerHub.result == 'success' }}
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          uses: Ilshidur/action-discord@master
          with:
            args: |
              Pull request de ${{github.event.pull_request.user.login}} foi um SUCESSO 
              Da ${{ github.event.pull_request.head.ref }} para ${{ github.event.pull_request.base.ref }}
              PR(${{ github.event.pull_request.number }}): ${{ github.event.pull_request.title }}
              ${{ github.event.pull_request.html_url }}



        - name: Notificacao de falha
          if: ${{ needs.TesteUnitario.result != 'success' || needs.AceitaRecusaPR.result != 'success' || needs.PushDokerHub.result != 'success' }}
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          uses: Ilshidur/action-discord@master
          with:
            args: |
              Pull request de ${{github.event.pull_request.user.login}} FALHOU
              Da ${{ github.event.pull_request.head.ref }} para ${{ github.event.pull_request.base.ref }}
              PR(${{ github.event.pull_request.number }}): ${{ github.event.pull_request.title }}
              ${{ github.event.pull_request.html_url }}